#!/usr/bin/env bash
# NOTE: openssl v1.1.1b or newer is required
#   specifically for the -pbkdf2 flag
#   MacOS 10.13 and 10.14 comes with LibreSSL which is not fully compatible
#   Install on MacOS with `brew install openssl@1.1`

function help {
  echo ' '
  echo 'Encrypt or decrypt Kubernetes secrets files'
  echo ' '
  echo 'options:'
  echo $'\t-e, --encrypt \t\t encrypt files'
  echo $'\t-d, --decrypt \t\t decrypt files'
  echo ' '
}

function encrypt {
  echo -n "Encryption password:"
  read -s pass1
  echo -n $'\nVerify password:'
  read -s pass2
  if [ "$pass1" != "$pass2" ]; then
    echo "Passwords do not match"
    exit 0
  else
    echo ' '
  fi

  files=$(find ../ -name secret*.y*ml)
  for file in $files; do
    openssl enc \
      -aes-256-cbc \
      -md sha512 \
      -pbkdf2 \
      -iter 1000 \
      -salt \
      -in $file \
      -out "$file".enc \
      -pass "pass:$pass1"
    echo "$file".enc
  done
}

function decrypt {
  echo -n "Encryption password:"
  read -s pass
  echo ' '
  files=$(find ../ -name secret*.y*ml.enc)
  for file in $files; do
    suffix=".enc"
    filename=${file%"$suffix"}
    openssl enc -d \
      -aes-256-cbc \
      -md sha512 \
      -pbkdf2 \
      -iter 1000 \
      -salt \
      -in $file \
      -out $filename \
      -pass "pass:$pass"
    echo $filename
  done
}

while test $# -gt 0; do
  case "$1" in
    -h|--help)
      help
      exit 0
      ;;
    -e|--encrypt)
      encrypt
      shift
      ;;
    -d|--decrypt)
      decrypt
      shift
      ;;
    *)
      break
      ;;
  esac
done
